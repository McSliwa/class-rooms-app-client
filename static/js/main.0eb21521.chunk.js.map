{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Div","styled","unstable_styleFunctionSx","theme","createTheme","palette","mode","primary","main","secondary","URL_API","App","props","useState","rooms","setRooms","newRoom","setNewRoom","numSelected","setNumSelected","React","value","setValue","useEffect","getClassroomsData","a","Axios","get","headers","response","data","map","selected","ThemeProvider","sx","backgroundColor","minHeight","TabContext","AppBar","component","Paper","variant","align","position","p","color","fontWeight","background","Toolbar","IconButton","size","edge","aria-label","mr","onClick","event","TabList","onChange","newValue","flexGrow","scrollButtons","allowScrollButtonsMobile","Tab","label","aria-controls","aria-haspopup","TabPanel","elevation","marginTop","TableContainer","Table","checboxSelection","minWidTableCell","TableHead","TableRow","TableCell","padding","Checkbox","inputProps","indeterminate","length","checked","target","room","fontSize","TableBody","e","handleSelectClick","id","name","width","typeObject","typeName","capacity","TableFooter","TextField","required","fullWidth","InputProps","endAdornment","InputAdornment","classId","prevState","className","Autocomplete","disablePortal","options","renderInput","params","classCapacity","InputLabelProps","shrink","Button","ml","post","then","filter","r","forEach","rr","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gjBAoBMA,EAAMC,YAAO,MAAPA,CAAcC,KAEpBC,EAAQC,YAAY,CACxBC,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,cAKNE,EAAU,wCAGD,SAASC,EAAIC,GAAQ,IAAD,EACPC,mBAAS,IADF,mBAC1BC,EAD0B,KACnBC,EADmB,OAEHF,mBAAS,IAFN,mBAE1BG,EAF0B,KAEjBC,EAFiB,OAGKJ,mBAAS,GAHd,mBAG1BK,EAH0B,KAGbC,EAHa,OAIPC,IAAMP,SAAS,GAJR,mBAI1BQ,EAJ0B,KAInBC,EAJmB,KAMjCC,qBAAU,WACRC,OACC,IAEH,IAAMA,GAAiB,uCAAG,4BAAAC,EAAA,sEACDC,IAAMC,IAAIjB,EAAS,CACxCkB,QAAS,CACP,qCAAqC,KAHjB,OAClBC,EADkB,OAMxBd,EAASc,EAASC,KAAKC,KAAI,SAACD,GAAD,mBAAC,eAAeA,GAAhB,IAAsBE,UAAU,QANnC,2CAAH,qDA2DvB,OACE,cAACC,EAAA,EAAD,CAAe9B,MAAOA,EAAtB,SACE,cAACH,EAAD,CAAKkC,GAAI,CAAEC,gBAAiB,UAAWC,UAAW,SAAlD,SACE,eAACC,EAAA,EAAD,CAAYhB,MAAOA,EAAnB,UACE,cAACiB,EAAA,EAAD,CAAQC,UAAWC,IAAOC,QAAQ,YAAYC,MAAM,OAAOC,SAAS,SAAST,GAAI,CAC/EU,EAAG,EAAGC,MAAO,UAAWC,WAAY,OACpCC,WAAY,oDAFd,SAIE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,KAAK,QAAQN,MAAM,UAAUO,aAAW,OAAOlB,GAAI,CAAEmB,GAAI,GAAlF,SACE,cAAC,IAAD,CAAiBC,QAhBf,SAACC,GAEfjC,EAD4B,IAAVD,EAAc,EAAKA,EAAQ,QAiBnC,eAACmC,EAAA,EAAD,CAASC,SAtBA,SAACF,EAAOG,GAC3BpC,EAASoC,IAqBkCN,aAAW,uBAC1ClB,GAAI,CAAEyB,SAAU,GAAKlB,QAAQ,aAAamB,cAAc,OACxDC,0BAAwB,EAF1B,UAGE,cAACC,EAAA,EAAD,CAAKC,MAAM,YAAY1C,MAAO,IAC9B,cAACyC,EAAA,EAAD,CAAKC,MAAM,cAAc1C,MAAO,IAChC,cAACyC,EAAA,EAAD,CAAKC,MAAM,aAAa1C,MAAO,IAC/B,cAACyC,EAAA,EAAD,CAAKC,MAAM,YAAY1C,MAAO,OAEhC,cAAC4B,EAAA,EAAD,CAAYC,KAAK,QAAQE,aAAW,0BAA0BY,gBAAc,cAC1EC,gBAAc,OAAOpB,MAAM,UAAUM,KAAK,MAD5C,SAGE,cAAC,IAAD,WAIN,cAACe,EAAA,EAAD,CAAU7C,MAAO,EAAjB,SACE,cAACmB,EAAA,EAAD,CAAO2B,UAAW,GAAIjC,GAAI,CAAEkC,UAAW,EAAGxB,EAAG,GAAKF,MAAM,OAAxD,qBAEF,cAACwB,EAAA,EAAD,CAAU7C,MAAO,EAAjB,SACE,cAACmB,EAAA,EAAD,CAAO2B,UAAW,GAAIjC,GAAI,CAAEkC,UAAW,EAAGxB,EAAG,GAAKF,MAAM,OAAxD,qBAEF,eAACwB,EAAA,EAAD,CAAU7C,MAAO,EAAjB,UACE,cAACgD,EAAA,EAAD,CAAgB9B,UAAWC,IAA3B,SACE,eAAC8B,EAAA,EAAD,CAAOC,kBAAgB,EAACrC,GAAI,CAAEsC,gBAAiB,KAA/C,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,EAAA,EAAD,CAAUhC,MAAM,UAAUiC,WAAY,CAAE,aAAc,uBACpDC,cAAe7D,EAAc,GAAKA,EAAcJ,EAAMkE,OACtDC,QAASnE,EAAMkE,OAAS,GAAK9D,IAAgBJ,EAAMkE,OACnDvB,SA1EO,SAACF,GACxBA,EAAM2B,OAAOD,SACf9D,EAAeL,EAAMkE,QACrBjE,EAASD,EAAMiB,KAAI,SAACoD,GAAD,mBAAC,eAAeA,GAAhB,IAAsBnD,UAAU,UAGnDb,EAAe,GACfJ,EAASD,EAAMiB,KAAI,SAACoD,GAAD,mBAAC,eAAeA,GAAhB,IAAsBnD,UAAU,cAsErC,cAAC2C,EAAA,EAAD,CAAWjC,MAAM,OAAOR,GAAI,CAAEY,WAAY,OAAQsC,SAAU,IAA5D,0BACA,cAACT,EAAA,EAAD,CAAWjC,MAAM,QAAQR,GAAI,CAAEY,WAAY,OAAQsC,SAAU,IAA7D,kBACA,cAACT,EAAA,EAAD,CAAWjC,MAAM,QAAQR,GAAI,CAAEY,WAAY,OAAQsC,SAAU,IAA7D,kBACA,cAACT,EAAA,EAAD,CAAWjC,MAAM,QAAQR,GAAI,CAAEY,WAAY,OAAQsC,SAAU,IAA7D,2BAGJ,cAACC,EAAA,EAAD,UACGvE,EAAMiB,KAAI,SAAAoD,GAAI,OACb,eAACT,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,QAAQ,WAAnB,SACE,cAACC,EAAA,EAAD,CAAUhC,MAAM,YAAYiC,WAAY,CAAE,aAAc,uBACtDG,QAASE,EAAKnD,SACdyB,SAAU,SAAC6B,IA9ET,SAAC/B,EAAO4B,GAChCA,EAAKnD,SAAWuB,EAAM2B,OAAOD,QAC7BlE,EAAS,YAAID,IACTyC,EAAM2B,OAAOD,QACf9D,EAAeD,EAAc,GAG7BC,EAAeD,EAAc,GAuEUqE,CAAkBD,EAAGH,QAG5C,cAACR,EAAA,EAAD,CAAWjC,MAAM,OAAjB,SAAyByC,EAAKK,KAC9B,cAACb,EAAA,EAAD,CAAWjC,MAAM,QAAjB,SAA0ByC,EAAKM,OAC/B,cAACd,EAAA,EAAD,CAAWjC,MAAM,QAAQgD,MAAM,MAA/B,SAAsCP,EAAKQ,WAAWC,WACtD,cAACjB,EAAA,EAAD,CAAWjC,MAAM,QAAQgD,MAAM,MAA/B,SAAsCP,EAAKU,aAV9BV,EAAKK,SAcxB,cAACM,EAAA,EAAD,UACE,eAACpB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,QAAQ,aAEnB,cAACD,EAAA,EAAD,UACE,cAACoB,EAAA,EAAD,CAAWP,GAAG,iBAAiBzB,MAAM,mBAAmBtB,QAAQ,WAC9DuD,UAAQ,EAAC9C,KAAK,QAAQ+C,WAAS,EAC/BC,WAAY,CACVC,aACE,cAACC,EAAA,EAAD,CAAgBzD,SAAS,MAAzB,SACE,cAAC,IAAD,CAAaE,MAAM,eAGzBxB,MAAOL,EAAQqF,QACf5C,SAAU,SAACF,GAAD,OAAWtC,GAAW,SAAAqF,GAAS,kCAAUA,GAAV,IAAqBD,QAAS9C,EAAM2B,OAAO7D,gBAExF,cAACsD,EAAA,EAAD,UACE,cAACoB,EAAA,EAAD,CAAWP,GAAG,iBAAiBzB,MAAM,OAAOtB,QAAQ,WAAWuD,UAAQ,EACrE9C,KAAK,QAAQ+C,WAAS,EACtBC,WAAY,CACVC,aACE,cAACC,EAAA,EAAD,CAAgBzD,SAAS,MAAzB,SACE,cAAC,IAAD,CAAgBE,MAAM,eAG5BxB,MAAOL,EAAQuF,UACf9C,SAAU,SAACF,GAAD,OAAWtC,GAAW,SAAAqF,GAAS,kCAAUA,GAAV,IAAqBC,UAAWhD,EAAM2B,OAAO7D,gBAE1F,cAACsD,EAAA,EAAD,UACE,cAAC6B,EAAA,EAAD,CACEC,eAAa,EAACvD,KAAK,QAAQ+C,WAAS,EAACxD,QAAQ,WAC7C+C,GAAG,iBACHkB,QAAS,CAAC,YAAY,WAAW,WACjCC,YAAa,SAACC,GAAD,OAAY,cAACb,EAAA,EAAD,2BAAea,GAAf,IAAuB7C,MAAM,eAG1D,cAACY,EAAA,EAAD,UACE,cAACoB,EAAA,EAAD,CAAWP,GAAG,iBAAiBzB,MAAM,WAAWtB,QAAQ,WAAWuD,UAAQ,EACzE9C,KAAK,QAAQ+C,WAAS,EACtBC,WAAY,CACVC,aACE,cAACC,EAAA,EAAD,CAAgBzD,SAAS,MAAzB,SACE,cAAC,IAAD,CAAgBE,MAAM,eAG5BxB,MAAOL,EAAQ6F,cAAeC,gBAAiB,CAAEC,QAAQ,GACzDtD,SAAU,SAACF,GAAD,OAAWtC,GAAW,SAAAqF,GAAS,kCAAUA,GAAV,IAAqBO,cAAetD,EAAM2B,OAAO7D,0BAMtG,eAACmB,EAAA,EAAD,CAAO2B,UAAW,GAAIjC,GAAI,CAAEkC,UAAW,EAAGxB,EAAG,GAAKF,MAAM,OAAxD,UACE,cAACsE,EAAA,EAAD,CAAQvE,QAAQ,YAAYI,MAAM,UAAUX,GAAI,CAAE+E,GAAI,EAAG5D,GAAI,EAAGR,MAAO,WACrES,QA3KU,WACtB5B,IAAMwF,KAAKxG,EAAS,CAClB8E,GAAIxE,EAAQqF,QACZZ,KAAMzE,EAAQuF,UACdV,SAAU7E,EAAQ6F,gBACjBM,MAAK,SAACtF,GACPd,EAAS,GAAD,mBAAKD,GAAL,aAAC,eAAgBe,EAASC,MAA1B,IAAgCE,UAAU,UAEpDf,EAAW,CAAEoF,QAAS,GAAIE,UAAW,GAAIM,cAAe,MAkK9C,mBAIA,cAACG,EAAA,EAAD,CAAQvE,QAAQ,YAAYI,MAAM,YAAYX,GAAI,CAAEmB,GAAI,EAAGR,MAAO,WAChES,QApKU,WACtBxC,EAAMsG,QAAO,SAAAC,GAAC,OAAmB,IAAfA,EAAErF,YAAmBsF,SAAQ,SAAAC,GAC7C7F,IAAM8F,OAAN,UAAgB9G,EAAhB,YAA2B6G,EAAG/B,KAC3B2B,MAAK,WAAQ3F,YAgKR,6BAMJ,cAAC0C,EAAA,EAAD,CAAU7C,MAAO,EAAjB,SACE,cAACmB,EAAA,EAAD,CAAO2B,UAAW,GAAIjC,GAAI,CAAEkC,UAAW,EAAGxB,EAAG,GAAKF,MAAM,OAAxD,4BC7OZ,IAYe+E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACxH,EAAD,MAEFyH,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0eb21521.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\nimport {\r\n  Button, Checkbox, Paper, AppBar, Toolbar, IconButton,\r\n  Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\r\n  TableFooter, TextField, InputAdornment\r\n} from '@mui/material';\r\nimport DialpadIcon from '@mui/icons-material/Dialpad';\r\nimport TextFieldsIcon from '@mui/icons-material/TextFields';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport { unstable_styleFunctionSx } from '@mui/system';\r\nimport DoubleArrowIcon from '@mui/icons-material/DoubleArrow';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\n//import { useForm } from \"react-hook-form\";\r\n\r\nconst Div = styled('div')(unstable_styleFunctionSx);\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#2E9FE6',\r\n    },\r\n    secondary: {\r\n      main: '#E69A2E',\r\n    },\r\n  },\r\n});\r\n\r\nconst URL_API = 'https://localhost:5001/api/Classrooms'\r\n//const URL_API = 'https://89.71.112.170:6969/api/Classrooms'\r\n\r\nexport default function App(props) {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [newRoom, setNewRoom] = useState({});\r\n  const [numSelected, setNumSelected] = useState(0);\r\n  const [value, setValue] = React.useState(3);\r\n\r\n  useEffect(() => {\r\n    getClassroomsData();\r\n  }, []);\r\n\r\n  const getClassroomsData = async () => {\r\n    const response = await Axios.get(URL_API, {\r\n      headers: {\r\n        'Access-ConTableRowol-Allow-Origin': true,\r\n      },\r\n    });\r\n    setRooms(response.data.map((data) => ({ ...data, selected: false })));\r\n  }\r\n\r\n  const createClassroom = () => {\r\n    Axios.post(URL_API, {\r\n      id: newRoom.classId,\r\n      name: newRoom.className,\r\n      capacity: newRoom.classCapacity\r\n    }).then((response) => {\r\n      setRooms([...rooms, { ...response.data, selected: false }])\r\n    });\r\n    setNewRoom({ classId: \"\", className: \"\", classCapacity: \"\" });\r\n  }\r\n\r\n  const deleteClassroom = () => {\r\n    rooms.filter(r => r.selected === true).forEach(rr => {\r\n      Axios.delete(`${URL_API}/${rr.id}`)\r\n        .then(() => { getClassroomsData(); });\r\n    });\r\n  }\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      setNumSelected(rooms.length);\r\n      setRooms(rooms.map((room) => ({ ...room, selected: true })));\r\n    }\r\n    else {\r\n      setNumSelected(0);\r\n      setRooms(rooms.map((room) => ({ ...room, selected: false })));\r\n    }\r\n  }\r\n\r\n  const handleSelectClick = (event, room) => {\r\n    room.selected = event.target.checked;\r\n    setRooms([...rooms]);\r\n    if (event.target.checked) {\r\n      setNumSelected(numSelected + 1);\r\n    }\r\n    else {\r\n      setNumSelected(numSelected - 1);\r\n    }\r\n  }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const nextTab = (event) => {\r\n    const nextValue = value === 4 ? 1 : (value + 1);\r\n    setValue(nextValue);\r\n  };\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Div sx={{ backgroundColor: '#282c34', minHeight: '100vh' }}>\r\n        <TabContext value={value}>\r\n          <AppBar component={Paper} variant='elevation' align='left' position=\"sticky\" sx={{\r\n            p: 1, color: '#007ECC', fontWeight: 'bold',\r\n            background: 'linear-gradient(45deg, #FFC87A 30%, #E69A2E 90%)'\r\n          }}>\r\n            <Toolbar>\r\n              <IconButton size=\"large\" edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}>\r\n                <DoubleArrowIcon onClick={nextTab} />\r\n              </IconButton>\r\n              <TabList onChange={handleChange} aria-label=\"lab API tabs example\"\r\n                sx={{ flexGrow: 1 }} variant='scrollable' scrollButtons='auto'\r\n                allowScrollButtonsMobile>\r\n                <Tab label=\"Searching\" value={1} />\r\n                <Tab label=\"Reservatins\" value={2} />\r\n                <Tab label=\"Classrooms\" value={3} />\r\n                <Tab label=\"Equipment\" value={4} />\r\n              </TabList>\r\n              <IconButton size=\"large\" aria-label=\"account of current user\" aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\" color=\"inherit\" edge='end' //onClick={handleMenu} \r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <TabPanel value={1}>\r\n            <Paper elevation={24} sx={{ marginTop: 2, p: 3 }} align=\"left\">TO DO</Paper>\r\n          </TabPanel>\r\n          <TabPanel value={2}>\r\n            <Paper elevation={24} sx={{ marginTop: 2, p: 3 }} align=\"left\">TO DO</Paper>\r\n          </TabPanel>\r\n          <TabPanel value={3}>\r\n            <TableContainer component={Paper}>\r\n              <Table checboxSelection sx={{ minWidTableCell: 850 }}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox color=\"primary\" inputProps={{ 'aria-label': 'select all desserts', }}\r\n                        indeterminate={numSelected > 0 && numSelected < rooms.length}\r\n                        checked={rooms.length > 0 && numSelected === rooms.length}\r\n                        onChange={handleSelectAllClick}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align=\"left\" sx={{ fontWeight: 'bold', fontSize: 16 }}>Classroom Id</TableCell>\r\n                    <TableCell align=\"right\" sx={{ fontWeight: 'bold', fontSize: 16 }}>Name</TableCell>\r\n                    <TableCell align=\"right\" sx={{ fontWeight: 'bold', fontSize: 16 }}>Type</TableCell>\r\n                    <TableCell align=\"right\" sx={{ fontWeight: 'bold', fontSize: 16 }}>Capacity</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rooms.map(room =>\r\n                    <TableRow key={room.id}>\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox color=\"secondary\" inputProps={{ 'aria-label': 'select all desserts', }}\r\n                          checked={room.selected}\r\n                          onChange={(e) => { handleSelectClick(e, room) }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{room.id}</TableCell>\r\n                      <TableCell align=\"right\">{room.name}</TableCell>\r\n                      <TableCell align=\"right\" width='200'>{room.typeObject.typeName}</TableCell>\r\n                      <TableCell align=\"right\" width='200'>{room.capacity}</TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n                <TableFooter>\r\n                  <TableRow>\r\n                    <TableCell padding=\"checkbox\">\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <TextField id=\"outlined-basic\" label='New Classroom id' variant=\"outlined\"\r\n                        required size='small' fullWidth\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position='end'>\r\n                              <DialpadIcon color='primary' />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        value={newRoom.classId}\r\n                        onChange={(event) => setNewRoom(prevState => ({ ...prevState, classId: event.target.value }))} />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" required\r\n                        size='small' fullWidth\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position='end'>\r\n                              <TextFieldsIcon color='primary' />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        value={newRoom.className}\r\n                        onChange={(event) => setNewRoom(prevState => ({ ...prevState, className: event.target.value }))} />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Autocomplete\r\n                        disablePortal size='small' fullWidth variant='outlined'\r\n                        id=\"combo-box-demo\"\r\n                        options={['112654998','12654564','2365456']}\r\n                        renderInput={(params) => <TextField {...params} label=\"Type\" />}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <TextField id=\"outlined-basic\" label=\"Capacity\" variant=\"outlined\" required\r\n                        size='small' fullWidth\r\n                        InputProps={{\r\n                          endAdornment: (\r\n                            <InputAdornment position='end'>\r\n                              <TextFieldsIcon color='primary' />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        value={newRoom.classCapacity} InputLabelProps={{ shrink: true }}\r\n                        onChange={(event) => setNewRoom(prevState => ({ ...prevState, classCapacity: event.target.value }))} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableFooter>\r\n              </Table>\r\n            </TableContainer>\r\n            <Paper elevation={24} sx={{ marginTop: 2, p: 3 }} align=\"left\">\r\n              <Button variant=\"contained\" color='primary' sx={{ ml: 4, mr: 2, color: '#FFFFFF' }}\r\n                onClick={createClassroom}>\r\n                Dodaj\r\n              </Button>\r\n              <Button variant=\"contained\" color='secondary' sx={{ mr: 2, color: '#FFFFFF' }}\r\n                onClick={deleteClassroom}>\r\n                Usuń\r\n              </Button>\r\n            </Paper>\r\n          </TabPanel>\r\n          <TabPanel value={4}>\r\n            <Paper elevation={24} sx={{ marginTop: 2, p: 3 }} align=\"left\">TO DO</Paper>\r\n          </TabPanel>\r\n        </TabContext>\r\n      </Div>\r\n    </ThemeProvider>\r\n  );\r\n\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}